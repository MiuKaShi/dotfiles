#!/usr/bin/env bash
# If you are executing this script in cron with a restricted environment,
# modify the shebang to specify appropriate path; /bin/bash in most distros.
# And, also if you aren't comfortable using(abuse?) env command.

# This script is based on https://serverfault.com/a/767079 posted
# by Mike Blackwell, modified to our needs. Credits to the author.

# This script is called from systemd unit file to mount or unmount
# a USB drive.

PATH="$PATH:/usr/bin:/usr/local/bin:/usr/sbin:/usr/local/sbin:/bin:/sbin"
USER="miuka"

ACTION=$1
#DEVBASE=$2

do_mount()
{
    DEVICE="/dev/${DEVBASE}"
    MOUNT_POINT=$(mount | grep ${DEVICE} | awk '{ print $3 }')
    DEV_LABEL=""

    if [[ -n ${MOUNT_POINT} ]]; then
        exit 1
    fi

    # Get info for this drive: $ID_FS_LABEL and $ID_FS_TYPE
    eval $(blkid -o udev ${DEVICE} | grep -i -e "ID_FS_LABEL" -e "ID_FS_TYPE")

    if [[ -n ${ID_FS_TYPE} ]]; then
        # Figure out a mount point to use
        LABEL=${ID_FS_LABEL}
        if grep -q " /media/${LABEL} " /etc/mtab; then
            # Already in use, make a unique one
            LABEL+="-${DEVBASE}"
        fi
        DEV_LABEL="${LABEL}"

        # Use the device name in case the drive doesn't have label
        if [ -z ${DEV_LABEL} ]; then
            DEV_LABEL="${DEVBASE}"
        fi

        MOUNT_POINT="/media/${DEV_LABEL}"

        mkdir -p ${MOUNT_POINT}

        # Global mount options
        OPTS="rw,relatime"

        # File system type specific mount options
        if [[ ${ID_FS_TYPE} == "vfat" ]]; then
            OPTS+=",users,uid=1000,gid=1000,umask=000,shortname=mixed,utf8=1,flush"
        fi

        if ! sudo -A mount -o ${OPTS} ${DEVICE} ${MOUNT_POINT}; then
            rmdir "${MOUNT_POINT}"
            exit 1
        fi
        sudo -u $USER DISPLAY=:0.0 notify-send -t 4000 "ðŸ’» USB mount" "$DEVICE mounted to $MOUNT_POINT."
    fi
}

do_unmount()
{
    DEVICE="/dev/${DEVBASE}"
    MOUNT_POINT=$(mount | grep ${DEVICE} | awk '{ print $3 }')
    if [[ -n ${MOUNT_POINT} ]]; then
        sudo -A umount -l ${DEVICE}
        sudo rmdir "${MOUNT_POINT}"
        sudo -u $USER DISPLAY=:0.0 notify-send -t 4000 "ðŸ’» USB unmount" "$MOUNT_POINT removed."
    fi
}

case "${ACTION}" in
    add)
        for DEVBASE in $2; do
            do_mount
        done
        ;;
    remove)
        for DEVBASE in $2; do
            do_unmount
        done
        ;;
esac
