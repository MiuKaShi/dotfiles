#!/bin/zsh

# profile file. runs on login. environmental variables are set here.

# if you don't plan on reverting to bash, you can remove the link in ~/.profile
# to clean up.

# export fcitx5 environment variables
export input_method="fcitx5"
export xmodifiers="@im=fcitx5"
export gtk_im_module="fcitx5"
export qt_im_module="fcitx5"

# adds `~/.local/bin` to $path
export gem_home="$(ruby -e 'puts gem.user_dir')"

# configuring va-api
export libva_driver_name="nvidia"
export moz_disable_rdd_sandbox="1"

# set julia 
export julia_num_threads=8

# set go $path
export gopath="${xdg_data_home:-$home/.local/share}/go"
export gobin="$gopath/bin"

# set better java font
 export _java_options=-djava.util.prefs.userroot="${xdg_config_home:-$home/.config}/java"
 export _java_options="-dawt.usesystemaafontsettings=on -dswing.aatext=true"
 export java_fonts="/usr/share/fonts/ttf"

# add matalab lib to fix editor problems
export ld_preload=/lib64/libfreetype.so 

# adds to $path
export path="$path:$gobin"
export path="$path:$gem_home/bin"
export path="$path:${$(find ~/.local/bin -type d -printf %p:)%%:}"
export path="$home/.jenv/bin:$path"
export path="/usr/local/sbin:$path"
export path=/usr/local/opt/python/libexec/bin:$path paths
export path=$home/bin:/usr/local/bin:$path
export path="/usr/local/opt/node@12/bin:$path"
export path="/usr/local/opt/icu4c/bin:$path"
export path="/usr/local/opt/icu4c/sbin:$path"
export path=$home/.local/bin:$path

unsetopt prompt_sp
unset ld_preload

# adds to perl5
export path="/home/miuka/perl5/bin:$path"
perl5lib="/home/miuka/perl5/lib/perl5${perl5lib:+:${perl5lib}}"; export perl5lib;
perl_local_lib_root="/home/miuka/perl5${perl_local_lib_root:+:${perl_local_lib_root}}"; export perl_local_lib_root;
perl_mb_opt="--install_base \"/home/miuka/perl5\""; export perl_mb_opt;
perl_mm_opt="install_base=/home/miuka/perl5"; export perl_mm_opt;

# my citation:
export bib="$home/papers/bib/mybib.bib"
export csl="$home/papers/bib/tribology-international.csl"

# default programs:
export editor="nvim"
export terminal="st"
export browser="firefox"
export reader="zathura"
export zotools="/home/miuka/.config/zotools/config.json"
# vulkan
export vk_icd_filenames="/usr/share/vulkan/icd.d/intel_icd.x86_64.json:/usr/share/vulkan/icd.d/nvidia_icd.json"
# ~/ clean-up:
export xdg_config_home="$home/.config"
export xdg_data_home="$home/.local/share"
export xdg_state_home="$home/.local/state"
export xdg_cache_home="$home/.cache"
export xinitrc="${xdg_config_home:-$home/.config}/x11/xinitrc"
#export xauthority="$xdg_runtime_dir/xauthority" # this line will break some dms.
export notmuch_config="${xdg_config_home:-$home/.config}/notmuch-config"
export gtk2_rc_files="${xdg_config_home:-$home/.config}/gtk-2.0/gtkrc-2.0"
export lesshistfile="-"
export wgetrc="${xdg_config_home:-$home/.config}/wget/wgetrc"
export inputrc="${xdg_config_home:-$home/.config}/shell/inputrc"
export zdotdir="${xdg_config_home:-$home/.config}/zsh"
#export alsa_config_path="$xdg_config_home/alsa/asoundrc"
export GNUPGHOME="${XDG_DATA_HOME:-$HOME/.local/share}/gnupg"
export WINEPREFIX="${XDG_DATA_HOME:-$HOME/.local/share}/wineprefixes/default"
export KODI_DATA="${XDG_DATA_HOME:-$HOME/.local/share}/kodi"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/password-store"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export ANDROID_SDK_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/android"
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export ANSIBLE_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/ansible/ansible.cfg"
export UNISON="${XDG_DATA_HOME:-$HOME/.local/share}/unison"
export HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/history"
export WEECHAT_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/weechat"
export MBSYNCRC="${XDG_CONFIG_HOME:-$HOME/.config}/mbsync/config"
export ELECTRUMDIR="${XDG_DATA_HOME:-$HOME/.local/share}/electrum"
export ATOM_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/atom"
export JUPYTER_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/jupyter"
export MAXIMA_USERDIR="${XDG_CONFIG_HOME:-$HOME/.config}/maxima"
export CUDA_CACHE_PATH="${XDG_CACHE_HOME:-$HOME/.cache}/nv"
export WAKATIME_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/wakatime"
export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc"
export IPYTHONDIR="${XDG_CONFIG_HOME:-$HOME/.config}/ipython"
export PYTHONSTARTUP="${XDG_CONFIG_HOME:-$HOME/.config}/python/pythonrc"

# Other program settings:
export DICS="/usr/share/stardict/dic/"
export SUDO_ASKPASS="$HOME/.local/bin/dmenupass"
export LESS=-R
export LESS_TERMCAP_mb="$(printf '%b' '[1;31m')"
export LESS_TERMCAP_md="$(printf '%b' '[1;36m')"
export LESS_TERMCAP_me="$(printf '%b' '[0m')"
export LESS_TERMCAP_so="$(printf '%b' '[01;44;33m')"
export LESS_TERMCAP_se="$(printf '%b' '[0m')"
export LESS_TERMCAP_us="$(printf '%b' '[1;32m')"
export LESS_TERMCAP_ue="$(printf '%b' '[0m')"
export LESSOPEN="| /usr/bin/highlight -O ansi %s 2>/dev/null"
export QT_QPA_PLATFORMTHEME="gtk2"	# Have QT use gtk2 theme.
export MOZ_USE_XINPUT2="1"		# Mozilla smooth scrolling/touchpads.
export AWT_TOOLKIT="MToolkit wmname LG3D"	#May have to install wmname
export _JAVA_AWT_WM_NONREPARENTING=1	# Fix for Java applications in dwm
export CM_SELECTIONS="clipboard"
export CM_OUTPUT_CLIP=1
export CM_MAX_CLIPS=10

# pfetch
export PF_INFO="ascii title os kernel wm editor shell uptime pkgs memory palette"
export PF_SEP=":"
export PF_COLOR=1

# This is the list for lf icons:
export LF_ICONS="di=📁:\
fi=📃:\
tw=🤝:\
ow=📂:\
ln=⛓:\
or=❌:\
ex=🎯:\
*.txt=✍:\
*.mom=✍:\
*.me=✍:\
*.ms=✍:\
*.png=🖼:\
*.webp=🖼:\
*.ico=🖼:\
*.jpg=📸:\
*.jpe=📸:\
*.jpeg=📸:\
*.gif=🖼:\
*.svg=🗺:\
*.tif=🖼:\
*.tiff=🖼:\
*.xcf=🖌:\
*.jl=:\
*.py=:\
*.html=🌎:\
*.xml=📰:\
*.gpg=🔒:\
*.css=🎨:\
*.pdf=📚:\
*.djvu=📚:\
*.epub=📚:\
*.csv=📓:\
*.xlsx=📓:\
*.tex=📜:\
*.md=📘:\
*.norg=📗:\
*.r=📊:\
*.R=📊:\
*.rmd=📊:\
*.Rmd=📊:\
*.m=📊:\
*.mp3=🎵:\
*.opus=🎵:\
*.ogg=🎵:\
*.m4a=🎵:\
*.flac=🎼:\
*.wav=🎼:\
*.mkv=🎥:\
*.mp4=🎥:\
*.webm=🎥:\
*.mpeg=🎥:\
*.avi=🎥:\
*.mov=🎥:\
*.mpg=🎥:\
*.wmv=🎥:\
*.m4b=🎥:\
*.flv=🎥:\
*.zip=📦:\
*.rar=📦:\
*.7z=📦:\
*.tar.gz=📦:\
*.z64=🎮:\
*.v64=🎮:\
*.n64=🎮:\
*.gba=🎮:\
*.nes=🎮:\
*.gdi=🎮:\
*.1=ℹ:\
*.nfo=ℹ:\
*.info=ℹ:\
*.log=📙:\
*.iso=📀:\
*.img=📀:\
*.bib=🎓:\
*.ged=👪:\
*.part=💔:\
*.torrent=🔽:\
*.jar=♨:\
*.java=♨:\
"

[ ! -f ${XDG_CONFIG_HOME:-$HOME/.config}/shell/shortcutrc ] && shortcuts >/dev/null 2>&1 &

if pacman -Qs libxft-bgra >/dev/null 2>&1; then
	# Start graphical server on user's current tty if not already running.
	[ "$(tty)" = "/dev/tty1" ] && ! pidof -s Xorg >/dev/null 2>&1 && exec startx "$XINITRC"
else
	echo "\033[31mIMPORTANT\033[0m: Note that \033[32m\`libxft-bgra\`\033[0m must be installed for this build of dwm.
Please run:
	\033[32mparu -S libxft-bgra-git\033[0m
and replace \`libxft\`. Afterwards, you may start the graphical server by running \`startx\`."
fi

# Switch escape and caps if tty and no passwd required:
sudo -n loadkeys ${XDG_DATA_HOME:-$HOME/.local/share}/larbs/ttymaps.kmap 2>/dev/null
