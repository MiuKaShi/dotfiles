#!/bin/sh

# File preview handler for lf.

set -C -f
IFS="$(printf '%b_' '\n')"
IFS="${IFS%_}"

image() {
    if [ -f "$1" ] && [ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ] && command -V ueberzug >/dev/null 2>&1; then
        bkt --ttl=15m --stale=15s -- printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' "$4" "$5" "$(($2 - 1))" "$(($3 - 1))" "$1" >"$FIFO_UEBERZUG"
        exit 1
    else
        mediainfo "$6"
    fi
}

ifub() {
    [ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ] && command -V ueberzug >/dev/null 2>&1
}

view_sqlite() {
    echo -e "\e[33m# \e[34m$(basename "$1")\e[0m"
    echo -e "\n\e[35m## \e[34mTABLES\e[0m\n"
    sqlite3 "$1" ".tables"
    return $?
}

# Note that the cache file name is a function of file information, meaning if
# an image appears in multiple places across the machine, it will not have to
# be regenerated once seen.

case "$(printf "%s\n" "$(readlink -f "$1")" | awk '{print tolower($0)}')" in
    *.tgz | *.tar.gz) bkt --ttl=15m --stale=15s -- tar tzf "$1" ;;
    *.tar.bz2 | *.tbz2) tar tjf "$1" ;;
    *.tar.txz | *.txz) xz --list "$1" ;;
    *.tar) tar tf "$1" ;;
    *.zip | *.jar | *.war | *.ear | *.oxt) unzip -l "$1" ;;
    *.rar) unrar l "$1" ;;
    *.7z) 7z l "$1" ;;
    *.gz | *.bzip | *.bzip2 | *.bp | *.bz2) als "$1" ;;
    *.deb) ar -tv "$1" ;;
    *.[1-8]) man "$1" | col -b ;;
    *.o) nm "$1" ;;
    *.torrent) transmission-show "$1" ;;
    *.iso) iso-info --no-header -l "$1" ;;
    *.odt | *.ods | *.odp | *.sxw) odt2txt "$1" ;;
    *.doc) catdoc "$1" ;;
    *.docx) pandoc -f docx -t gfm "$1" | glow -s ~/.cache/wal/glow.json - ;;
    *.xml | *.html) w3m -dump "$1" ;;
    *.wav | *.mp3 | *.flac | *.m4a | *.wma | *.ape | *.ac3 | *.og[agx] | *.spx | *.opus | *.as[fx] | *.mka)
        exiftool "$1" || exit 1
        ;;
    *.bmp | *.jpg | *.jpeg | *.png | *.xpm | *.webp | *.tif | *.gif | *.jfif)
        image "$1" "$2" "$3" "$4" "$5" "$1"
        ;;
    *.svg)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && convert "$1" "$CACHE.jpg"
        image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    *.avi | *.mp4 | *.wmv | *.dat | *.3gp | *.ogv | *.mkv | *.mpg | *.mpeg | *.vob | *.fl[icv] | *.m2v | *.mov | *.webm | *.ts | *.mts | *.m4v | *.r[am] | *.qt | *.divx)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
        image "$CACHE" "$2" "$3" "$4" "$5" "$1"
        ;;
    *.pdf)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
        image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    *.epub | *.mobi)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
        image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    *.excalidraw.md)
        bat --theme=gruvbox-dark --paging=never --tabs=2 --wrap=auto --style=full --terminal-width "$(($4 - 2))" -f "$1"
        ;;
    *.md)
        glow -s ~/.cache/wal/glow.json "$1"
        ;;
    *.ino)
        bat --language=cpp --theme=gruvbox-dark --paging=never --tabs=2 --wrap=auto --style=full --terminal-width "$(($4 - 2))" -f "$1"
        ;;
    *.sqlite) view_sqlite "$1" ;;
    *)
        bat --theme=gruvbox-dark --paging=never --tabs=2 --wrap=auto --style=full --terminal-width "$(($4 - 2))" -f "$1"
        ;;
esac
exit 0
